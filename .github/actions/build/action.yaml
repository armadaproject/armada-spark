name: Build
author: EnricoMi
description: Github Action to build this project against a Spark and Scala version

inputs:
  spark_version:
    description: Spark version to build against, e.g. "3.5.5" or "4.1.0-SNAPSHOT"
    required: true
  scala_version:
    description: Scala version to build with, e.g. "2.13.8"
    required: true
  java_version:
    description: Java version to build with, e.g. "11"
    required: true

runs:
  using: composite
  steps:
  - name: Restore Maven packages cache
    uses: actions/cache@v4
    with:
      path: ~/.m2/repository
      key: ${{ runner.os }}-mvn-build-${{ inputs.spark_version }}-${{ inputs.scala_version }}-${{ hashFiles('pom.xml') }}
      restore-keys:
        ${{ runner.os }}-mvn-build-${{ inputs.spark_version }}-${{ inputs.scala_version }}-${{ hashFiles('pom.xml') }}
        ${{ runner.os }}-mvn-build-${{ inputs.spark_version }}-${{ inputs.scala_version }}-
  - name: Setup JDK
    uses: actions/setup-java@v4
    with:
      java-version: ${{ inputs.java_version }}
      distribution: 'zulu'

  - name: Set Spark and Scala versions
    run: |
      # Set Spark and Scala versions
      ./scripts/set-version.sh "${{ inputs.spark_version }}" "${{ inputs.scala_version }}"
      echo "::group::changes"
      git diff
      echo "::endgroup::"
    shell: bash
  - name: Fetch mvn dependencies
    continue-on-error: true
    run: |
      # Fetch mvn dependencies
      echo "::group::mvn go-offline"
      mvn --batch-mode --update-snapshots dependency:go-offline
      echo "::endgroup::"
    shell: bash
  - name: Build package
    run: |
      # Build package
      echo "::group::mvn install"
      mvn --batch-mode install
      echo "::endgroup::"
    shell: bash

  - name: Build image
    if: ( ! contains(inputs.spark_version, '-SNAPSHOT') )
    env:
      JAVA_VERSION: ${{ inputs.java_version }}
    run: |
      # Build image
      echo "::group::createImage.sh"
      ./scripts/createImage.sh
      echo "::endgroup::"
    shell: bash
