name: E2E
author: EnricoMi
description: Github Action to run end-to-end tests against a Spark and Scala version

inputs:
  spark_version:
    description: Spark version to build against, e.g. "3.5.5" or "4.1.0-SNAPSHOT"
    required: true
  scala_version:
    description: Scala version to build with, e.g. "2.13.8"
    required: true
  java_version:
    description: Java version to build with, e.g. "11"
    required: true

runs:
  using: composite
  steps:
  - name: Checkout
    uses: actions/checkout@v4
    with:
      path: armada-spark

  - name: Restore Maven packages cache
    uses: actions/cache@v4
    with:
      path: ~/.m2/repository
      key: ${{ runner.os }}-mvn-e2e-${{ inputs.spark_version }}-${{ inputs.scala_version }}-${{ hashFiles('armada-spark/pom.xml') }}
      restore-keys:
        ${{ runner.os }}-mvn-e2e-${{ inputs.spark_version }}-${{ inputs.scala_version }}-${{ hashFiles('armada-spark/pom.xml') }}
        ${{ runner.os }}-mvn-e2e-${{ inputs.spark_version }}-${{ inputs.scala_version }}-
  - name: Move docker
    run: |
      # Moving docker to save space
      echo "::group::moving Docker"
      df -h /mnt
      sudo systemctl stop docker
      sudo cp -rpd /var/lib/docker /mnt
      sudo mv /var/lib/docker /var/lib/docker.old
      sudo ln -s /mnt/docker /var/lib
      sudo systemctl start docker
      df -h /mnt
      echo "::endgroup::"
    shell: bash
  - name: Setup JDK
    uses: actions/setup-java@v4
    with:
      java-version: ${{ inputs.java_version }}
      distribution: 'zulu'
  - name: Setup Go
    id: setup-go
    uses: armadaproject/armada-operator/.github/actions/setup-go-cache@main
    with:
      cache-prefix: go-e2e

  - name: Set Spark and Scala versions
    working-directory: armada-spark
    run: |
      # Set Spark and Scala versions
      ./scripts/set-version.sh "${{ inputs.spark_version }}" "${{ inputs.scala_version }}"
      echo "::group::changes"
      git diff
      echo "::endgroup::"
    shell: bash
  - name: Fetch mvn dependencies
    continue-on-error: true
    working-directory: armada-spark
    run: |
      # Fetch mvn dependencies
      echo "::group::mvn go-offline"
      mvn --batch-mode --update-snapshots dependency:go-offline
      echo "::endgroup::"
    shell: bash
  - name: Build package
    working-directory: armada-spark
    run: |
      # Build package
      echo "::group::mvn package"
      mvn --batch-mode package
      echo "::endgroup::"
    shell: bash
  - name: Build image
    env:
      JAVA_VERSION: ${{ inputs.java_version }}
    run: |
      # Build image
      echo "::group::createImage.sh"
      ./armada-spark/scripts/createImage.sh -p -e
      echo "::endgroup::"
    shell: bash
  - name: Test job processing
    id: submit
    run: |
      echo "::group::dev-e2e.sh"
      ./armada-spark/scripts/dev-e2e.sh -q test
      echo "::endgroup::"
    shell: bash
